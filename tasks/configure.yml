---
- name: Check postgres configuration attributes
  ansible.builtin.assert:
    that: _postgresql_datadir_attr in _postgresql_config

- name: Set configuration facts
  ansible.builtin.set_fact:
    _postgresql_datadir: "{{ _postgresql_config.data_directory }}"
    _postgresql_hba: "{{ _postgresql_config.hba_file }}"
    _postgresql_ident: "{{ _postgresql_config.ident_file }}"
    _postgresql_unit: "/etc/systemd/system/{{ _postgresql_service }}.service"

- name: Check datadir configuration
  ansible.builtin.assert:
    that:
      - _postgresql_config[_postgresql_datadir_attr] == _postgresql_datadir
    fail_msg: postgresql_datadir attribute must match requested configuration

- name: Create PostgreSQL data directory
  ansible.builtin.file:
    path: "{{ _postgresql_datadir }}"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    state: directory
    mode: 0700

- name: Initialize PostgreSQL database
  ansible.builtin.command:
    cmd: "{{ _postgresql_bindir }}/initdb -D {{ _postgresql_datadir }}"
    creates: "{{ _postgresql_datadir }}/PG_VERSION"
  become: true
  become_user: "{{ postgresql_user }}"

- name: Manage PostgreSQL main config
  ansible.builtin.template:
    src: postgres.conf.j2
    dest: "{{ _postgresql_datadir }}/postgresql.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: 0644
  vars:
    _config: "{{ _postgresql_config | dict2items }}"
  notify: postgresql_restart

- name: Create service tempfile
  ansible.builtin.tempfile:
    prefix: systemd
  reigster: _systemd_tempfile
  changed_when: false

- name: Manage PostgreSQL service file
  when: ansible_os_family == 'RedHat'
  block:
    - name: Copy master service file
      ansible.builtin.copy:
        src: "/lib/systemd/system/postgresql-{{ postgresql_release }}.service"
        dest: "{{ _systemd_tempfile.path }}"
        remote_src: true
        owner: root
        group: root
        mode: 0644
      changed_when: false

    - name: Edit service file configuration
      ansible.builtin.lineinfile:
        path: "{{ _systemd_tempfile.path }}"
        regexp: 'Environment=PGDATA=.*'
        line: "Environment=PGDATA={{ _postgresql_datadir }}"

    - name: Manage PostgreSQL service file
      ansible.builtin.copy:
        dest: "{{ _systemd_tempfile.path }}"
        src: "/lib/systemd/system/postgresql-{{ postgresql_release }}.service"
        remote_src: true
        owner: root
        group: root
        mode: 0644

  always:
    - name: Destroy systemd tempfile
      ansible.builtin.file:
        path: "{{ _systemd_tepfile.path }}"
        state: absent
      changed_when: false
