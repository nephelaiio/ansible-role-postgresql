---
- name: Set installation facts
  ansible.builtin.include_tasks: vars.yml

- name: Manage PostgreSQL databases
  community.postgresql.postgresql_db:
    name: "{{ item.name }}"
    lc_collate: "{{ item.lc_collate | default('en_US.UTF-8') }}"
    lc_ctype: "{{ item.lc_ctype | default('en_US.UTF-8') }}"
    encoding: "{{ item.encoding | default('UTF-8') }}"
    template: "{{ item.template | default('template0') }}"
    port: "{{ item.port | default(omit) }}"
    owner: "{{ item.owner | default(postgresql_user) }}"
    state: "{{ item.state | default('present') }}"
  loop_control:
    label: "{{ item.name }}"
  loop: "{{ postgresql_databases }}"
  become: true
  become_user: "{{ postgresql_user }}"

- name: Manage PostgreSQL database privileges
  community.postgresql.postgresql_privs:
    db: "{{ _database.db_connect | default(postgresql_default_database) }}"
    role: "{{ _role.name }}"
    privs: "{{ _role.privs | default(omit) }}"
    objs: "{{ _role.objs | default(omit) }}"
    schema: "{{ _role.schema | default(omit) }}"
    type: "{{ _role.type | default(omit) }}"
    grant_option: "{{ _role.grant_option | default(omit) }}"
    session_role: "{{ _database.session_role | default(omit) }}"
    ssl_mode: "{{ _database.ssl_mode | default(omit) }}"
    state: "{{ _role.state | default('present') }}"
  vars:
    ansible_ssh_pipelining: true
    _database: "{{ item.0 }}"
    _role: "{{ item.1 }}"
  loop_control:
    label: "{{ _database.name }}"
  loop: "{{ postgresql_databases | subelements('roles', skip_missing='yes') }}"
  become: true
  become_user: "{{ postgresql_user }}"
  environment:
    PGOPTIONS: "{{ _postgresql_pgoptions }}"
