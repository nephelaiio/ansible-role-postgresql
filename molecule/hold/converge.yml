- name: Deploy PostgreSQL servers
  hosts: all
  become: true
  roles:
    - nephelaiio.postgresql
  pre_tasks:
    - name: Import role defaults
      ansible.builtin.include_role:
        name: nephelaiio.postgresql
        tasks_from: vars.yml

    - name: Query Debian package versions
      ansible.builtin.shell:
        cmd: "apt-cache madison {{ item }} | awk -F'|' '{ print $2 }'"
      loop: "{{ _postgresql_package_name }}"
      register: _debian_package_query
      when: ansible_os_family == "Debian"
      changed_when: false

    - name: Query RedHat package versions
      ansible.builtin.shell:
        cmd: "yum list {{ item }} --showduplicates | grep '^{{ item }}' | awk '{ print $1,$2 }' | sort -r"
      loop: "{{ _postgresql_package_name }}"
      register: _redhat_package_query
      when: ansible_os_family == "RedHat"
      changed_when: false

    - name: Set package version facts
      ansible.builtin.set_fact:
        _postgresql_package_query: "{{ _redhat_packages + _debian_packages }}"
      vars:
        _redhat_packages: "{{ [] if _redhat_package_query.skipped else _redhat_package_query.results }}"
        _debian_packages: "{{ [] if _debian_package_query.skipped else _debian_package_query.results }}"

    - name: Verify target package versions
      ansible.builtin.fail:
        msg: "{{ _package }} has no installation candidate: {{ item }}"
      vars:
        _stdout: "{{ item.stdout_lines }}"
        _package: "{{ item.item }}"
      loop_control:
        label: "{{ item.item }}"
      loop: "{{ _postgresql_package_query }}"
      when: _stdout | length == 0

    - name: Initialize package versions
      ansible.builtin.set_fact:
        postgresql_package_name: []

    - name: Set target Debian package versions
      ansible.builtin.set_fact:
        postgresql_package_name: "{{ postgresql_package_name + [_package] }}"
      vars:
        _stdout: "{{ item.stdout_lines }}"
        _multiple: "{{ _stdout | length > 1 }}"
        _version: "{{ _stdout[0] if not _multiple else _stdout[1] }}"
        _package: "{{ item.item }}={{ _version | trim }}"
      loop_control:
        label: "{{ item.item }}"
      loop: "{{ _postgresql_package_query }}"
      when: ansible_os_family == "Debian"

    - name: Set target RedHat package versions
      ansible.builtin.set_fact:
        postgresql_package_name: "{{ postgresql_package_name + [_package] }}"
      vars:
        _stdout: "{{ item.stdout_lines }}"
        _multiple: "{{ _stdout | length > 1 }}"
        _target: "{{ (_stdout[0] if not _multiple else _stdout[1]).split(' ') }}"
        _arch: "{{ _target[0].split('.')[1] }}"
        _name: "{{ _target[0].split('.')[0] }}"
        _version: "{{ _target[1] }}"
        _package: "{{ _name }}={{ _version }}.{{ _arch }}"
      loop_control:
        label: "{{ item.item }}"
      loop: "{{ _postgresql_package_query }}"
      when: ansible_os_family == "RedHat"
