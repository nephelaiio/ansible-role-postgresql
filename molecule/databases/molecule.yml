---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
    requirements-file: requirements.yml
driver:
  name: docker
platforms:
  - name: postgresql-install-01
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2204}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
provisioner:
  name: ansible
  playbooks:
    prepare: ../common/prepare.yml
    converge: ../common/converge.yml
    verify: ../common/verify.yml
  config_options:
    defaults:
      callbacks_enabled: ansible.posix.profile_tasks
  inventory:
    hosts:
      all:
        vars:
          postgresql_roles:
            - name: admin
              password: admin
              groups:
                - name: admins
            - name: user
              password: user
              groups:
                - name: read_only
            - name: admins
              role_attr_flags: "NOLOGIN"
            - name: read_only
              role_attr_flags: "NOLOGIN"
          postgresql_databases:
            - name: database
              encoding: "UNICODE"
              roles:
                - name: admins
                  privs: ALL
                  type: database
                  objs: database
                - name: read_only
                  privs: ALL
                  type: database
                  objs: database
verifier:
  name: ansible
scenario:
  prepare_sequence:
    - prepare
  create_sequence:
    - create
  converge_sequence:
    - converge
  destroy_sequence:
    - destroy
  cleanup_sequence:
    - cleanup
  test_sequence:
    - dependency
    - create
    - prepare
    - converge
    - side_effect
    - verify
